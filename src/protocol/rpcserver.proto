syntax = "proto3";

service RPCServer {
    rpc Version(StringRequest) returns (String);
    rpc List(StringRequest) returns (ListResponse);
    rpc Stop(StringRequest) returns (String);
    rpc Start(StringRequest) returns (String);
    rpc Kill(StringRequest) returns (String);
    rpc InstanceStop(StringRequest) returns (String);
    rpc Attach(ServerQuery) returns (ServerReply);
    rpc Auth(User) returns (String); //obtain auth token
}

message String {
    string str = 1;
}
message User {
    string name = 1;
    string password = 2;
}
message ListResponse {
    repeated Process processes = 1;
}
message Process {
    string name = 1;
    string state = 2;
}
message StringRequest {
    string str = 1;
    string auth_token = 2; //leave blank if authentication is not required
}

message ServerQuery {
    int64 message_id = 1; //fetches 100 messages from before this id, -1 for latest, -2 for no messages (first id starts at 0, arrays start at 0 wow omigod)
    bool get_ram = 2; //get ram usage
    bool get_cpu = 3; //get cpu usage
    string command = 4; //input command
    string process_name = 5;//input process name
    string auth_token = 6; //authentication token required if authentication is required
}

message ServerReply {
    repeated string messages = 1; //returns related messages (first id starts at 0, arrays start at 0 wow omigod)
    uint64 message_id = 2; //returns message id from which it starts from, returns latest message id if no messages were requested (message_id = -2)
    string ram_usage = 3;
    string cpu_usage = 4;
}